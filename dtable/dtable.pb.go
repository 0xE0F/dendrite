// Code generated by protoc-gen-go.
// source: dtable.proto
// DO NOT EDIT!

/*
Package dtable is a generated protocol buffer package.

It is generated from these files:
	dtable.proto

It has these top-level messages:
	PBDTableGet
	PBDTableGetResp
	PBDTableSet
	PBDTableSetMeta
	PBDTableSetResp
	PBDTableDemoteKey
	PBDTableClearReplica
*/
package dtable

import proto "code.google.com/p/goprotobuf/proto"
import math "math"
import dendrite "github.com/fastfn/dendrite"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type PBDTableGet struct {
	Dest             *dendrite.PBProtoVnode `protobuf:"bytes,1,req,name=dest" json:"dest,omitempty"`
	Key              []byte                 `protobuf:"bytes,2,req,name=key" json:"key,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *PBDTableGet) Reset()         { *m = PBDTableGet{} }
func (m *PBDTableGet) String() string { return proto.CompactTextString(m) }
func (*PBDTableGet) ProtoMessage()    {}

func (m *PBDTableGet) GetDest() *dendrite.PBProtoVnode {
	if m != nil {
		return m.Dest
	}
	return nil
}

func (m *PBDTableGet) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type PBDTableGetResp struct {
	Found            *bool  `protobuf:"varint,1,req,name=found" json:"found,omitempty"`
	Value            []byte `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PBDTableGetResp) Reset()         { *m = PBDTableGetResp{} }
func (m *PBDTableGetResp) String() string { return proto.CompactTextString(m) }
func (*PBDTableGetResp) ProtoMessage()    {}

func (m *PBDTableGetResp) GetFound() bool {
	if m != nil && m.Found != nil {
		return *m.Found
	}
	return false
}

func (m *PBDTableGetResp) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type PBDTableSet struct {
	Origin           *dendrite.PBProtoVnode   `protobuf:"bytes,1,req,name=origin" json:"origin,omitempty"`
	Dest             *dendrite.PBProtoVnode   `protobuf:"bytes,2,req,name=dest" json:"dest,omitempty"`
	Key              []byte                   `protobuf:"bytes,3,req,name=key" json:"key,omitempty"`
	IsReplica        *bool                    `protobuf:"varint,4,req,name=isReplica" json:"isReplica,omitempty"`
	MinAcks          *int32                   `protobuf:"varint,5,req,name=minAcks" json:"minAcks,omitempty"`
	ReplicaVnodes    []*dendrite.PBProtoVnode `protobuf:"bytes,6,rep,name=replicaVnodes" json:"replicaVnodes,omitempty"`
	Val              []byte                   `protobuf:"bytes,7,opt,name=val" json:"val,omitempty"`
	Demoting         *bool                    `protobuf:"varint,8,opt,name=demoting" json:"demoting,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *PBDTableSet) Reset()         { *m = PBDTableSet{} }
func (m *PBDTableSet) String() string { return proto.CompactTextString(m) }
func (*PBDTableSet) ProtoMessage()    {}

func (m *PBDTableSet) GetOrigin() *dendrite.PBProtoVnode {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *PBDTableSet) GetDest() *dendrite.PBProtoVnode {
	if m != nil {
		return m.Dest
	}
	return nil
}

func (m *PBDTableSet) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *PBDTableSet) GetIsReplica() bool {
	if m != nil && m.IsReplica != nil {
		return *m.IsReplica
	}
	return false
}

func (m *PBDTableSet) GetMinAcks() int32 {
	if m != nil && m.MinAcks != nil {
		return *m.MinAcks
	}
	return 0
}

func (m *PBDTableSet) GetReplicaVnodes() []*dendrite.PBProtoVnode {
	if m != nil {
		return m.ReplicaVnodes
	}
	return nil
}

func (m *PBDTableSet) GetVal() []byte {
	if m != nil {
		return m.Val
	}
	return nil
}

func (m *PBDTableSet) GetDemoting() bool {
	if m != nil && m.Demoting != nil {
		return *m.Demoting
	}
	return false
}

// set metadata for replica records
type PBDTableSetMeta struct {
	Dest             *dendrite.PBProtoVnode   `protobuf:"bytes,1,req,name=dest" json:"dest,omitempty"`
	Key              []byte                   `protobuf:"bytes,2,req,name=key" json:"key,omitempty"`
	State            *int32                   `protobuf:"varint,3,req,name=state" json:"state,omitempty"`
	Depth            *int32                   `protobuf:"varint,4,req,name=depth" json:"depth,omitempty"`
	Master           *dendrite.PBProtoVnode   `protobuf:"bytes,5,req,name=master" json:"master,omitempty"`
	ReplicaVnodes    []*dendrite.PBProtoVnode `protobuf:"bytes,6,rep,name=replicaVnodes" json:"replicaVnodes,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *PBDTableSetMeta) Reset()         { *m = PBDTableSetMeta{} }
func (m *PBDTableSetMeta) String() string { return proto.CompactTextString(m) }
func (*PBDTableSetMeta) ProtoMessage()    {}

func (m *PBDTableSetMeta) GetDest() *dendrite.PBProtoVnode {
	if m != nil {
		return m.Dest
	}
	return nil
}

func (m *PBDTableSetMeta) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *PBDTableSetMeta) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *PBDTableSetMeta) GetDepth() int32 {
	if m != nil && m.Depth != nil {
		return *m.Depth
	}
	return 0
}

func (m *PBDTableSetMeta) GetMaster() *dendrite.PBProtoVnode {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *PBDTableSetMeta) GetReplicaVnodes() []*dendrite.PBProtoVnode {
	if m != nil {
		return m.ReplicaVnodes
	}
	return nil
}

type PBDTableSetResp struct {
	Ok               *bool   `protobuf:"varint,1,req,name=ok" json:"ok,omitempty"`
	Error            *string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PBDTableSetResp) Reset()         { *m = PBDTableSetResp{} }
func (m *PBDTableSetResp) String() string { return proto.CompactTextString(m) }
func (*PBDTableSetResp) ProtoMessage()    {}

func (m *PBDTableSetResp) GetOk() bool {
	if m != nil && m.Ok != nil {
		return *m.Ok
	}
	return false
}

func (m *PBDTableSetResp) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

type PBDTableDemoteKey struct {
	Dest             *dendrite.PBProtoVnode   `protobuf:"bytes,1,req,name=dest" json:"dest,omitempty"`
	Key              []byte                   `protobuf:"bytes,2,req,name=key" json:"key,omitempty"`
	Val              []byte                   `protobuf:"bytes,3,req,name=val" json:"val,omitempty"`
	Timestamp        *int64                   `protobuf:"varint,4,req,name=timestamp" json:"timestamp,omitempty"`
	ReplicaVnodes    []*dendrite.PBProtoVnode `protobuf:"bytes,5,rep,name=replicaVnodes" json:"replicaVnodes,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *PBDTableDemoteKey) Reset()         { *m = PBDTableDemoteKey{} }
func (m *PBDTableDemoteKey) String() string { return proto.CompactTextString(m) }
func (*PBDTableDemoteKey) ProtoMessage()    {}

func (m *PBDTableDemoteKey) GetDest() *dendrite.PBProtoVnode {
	if m != nil {
		return m.Dest
	}
	return nil
}

func (m *PBDTableDemoteKey) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *PBDTableDemoteKey) GetVal() []byte {
	if m != nil {
		return m.Val
	}
	return nil
}

func (m *PBDTableDemoteKey) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *PBDTableDemoteKey) GetReplicaVnodes() []*dendrite.PBProtoVnode {
	if m != nil {
		return m.ReplicaVnodes
	}
	return nil
}

type PBDTableClearReplica struct {
	Dest             *dendrite.PBProtoVnode `protobuf:"bytes,1,req,name=dest" json:"dest,omitempty"`
	Key              []byte                 `protobuf:"bytes,2,req,name=key" json:"key,omitempty"`
	Demoted          *bool                  `protobuf:"varint,3,req,name=demoted" json:"demoted,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *PBDTableClearReplica) Reset()         { *m = PBDTableClearReplica{} }
func (m *PBDTableClearReplica) String() string { return proto.CompactTextString(m) }
func (*PBDTableClearReplica) ProtoMessage()    {}

func (m *PBDTableClearReplica) GetDest() *dendrite.PBProtoVnode {
	if m != nil {
		return m.Dest
	}
	return nil
}

func (m *PBDTableClearReplica) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *PBDTableClearReplica) GetDemoted() bool {
	if m != nil && m.Demoted != nil {
		return *m.Demoted
	}
	return false
}

func init() {
}
