package dtable;
import "chord.proto";

message	PBDTableResponse {
	required bool ok = 1;
	optional string error = 2;
}

message PBDTableReplicaInfo {
	optional dendrite.PBProtoVnode master = 1;
	repeated dendrite.PBProtoVnode vnodes = 2;
	repeated dendrite.PBProtoVnode orphanVnodes = 3;
	optional int32 state = 4;
	optional int32 depth = 5;
}

message PBDTableItem {
	required bytes key = 1;
	optional bytes val = 2;
	optional int64 timestamp = 3;
	optional bool commited = 4;
	optional bytes keyHash = 5;
	optional PBDTableReplicaInfo replicaInfo = 6;
	optional dendrite.PBProtoVnode origin = 7;
	optional bool found = 8;
}

message PBDTableDemotedItem {
	required dendrite.PBProtoVnode dest = 1;
	required PBDTableItem item = 2;
	optional dendrite.PBProtoVnode origin = 3;
}

message PBDTableMultiItemResponse {
	optional dendrite.PBProtoVnode origin = 1;
	repeated PBDTableItem items = 2;
}

message PBDTableGetItem {
	required dendrite.PBProtoVnode dest = 1;
	required bytes keyHash = 2;
	optional dendrite.PBProtoVnode origin = 3;
}

message PBDTableSetItem {
	required dendrite.PBProtoVnode dest = 1;
	required PBDTableItem item = 2;
	optional dendrite.PBProtoVnode origin = 3;
	optional bool demoting = 4;
	optional bool isReplica = 5;
	optional int32 minAcks = 6;
}

message PBDTableSetMultiItem {
	required dendrite.PBProtoVnode dest = 1;
	optional dendrite.PBProtoVnode origin = 2;
	repeated PBDTableItem items = 3;
}

message PBDTableClearReplica {
	required dendrite.PBProtoVnode dest = 1;
	required bytes keyHash = 2;
	required bool demoted = 3;
	optional dendrite.PBProtoVnode origin = 4;
}

// set metadata for replica records
message PBDTableSetReplicaInfo {
	required dendrite.PBProtoVnode dest = 1;
	required bytes keyHash = 2;
	required PBDTableReplicaInfo replicaInfo = 3;
	optional dendrite.PBProtoVnode origin = 4;
}
